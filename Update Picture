import cv2
import tkinter as tk
from tkinter import Label, Button, Entry, messagebox
from PIL import Image, ImageTk
import pandas as pd
import random
import os

# ƒê∆∞·ªùng d·∫´n file
excel_path = r"D:\Face_Recognition\BCN\BCN.xlsx"
image_folder = r"D:\Face_Recognition\pic"

# Ki·ªÉm tra file Excel, n·∫øu kh√¥ng c√≥ th√¨ t·∫°o m·ªõi
if not os.path.exists(excel_path):
    df = pd.DataFrame(columns=["M√£", "T√™n", "So_Ngay_Lam", "So_Ngay_Tre", "CT"])
    df.to_excel(excel_path, index=False)
else:
    df = pd.read_excel(excel_path)

# M·ªü camera
cap = cv2.VideoCapture(0)

def update_frame():
    """C·∫≠p nh·∫≠t h√¨nh ·∫£nh t·ª´ camera l√™n giao di·ªán"""
    ret, frame = cap.read()
    if ret:
        frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        img = Image.fromarray(frame)
        imgtk = ImageTk.PhotoImage(image=img)
        lbl_video.imgtk = imgtk
        lbl_video.configure(image=imgtk)
    lbl_video.after(10, update_frame)

def generate_unique_id():
    """T·∫°o m√£ ng·∫´u nhi√™n kh√¥ng tr√πng"""
    existing_ids = set(df["M√£"].astype(str))  # Chuy·ªÉn th√†nh t·∫≠p h·ª£p ƒë·ªÉ ki·ªÉm tra nhanh h∆°n
    while True:
        random_number = "A" + str(random.randint(100000, 999999))
        if random_number not in existing_ids:
            return random_number

def capture_image():
    """Ch·ª•p ·∫£nh v√† l∆∞u v·ªõi t√™n do ng∆∞·ªùi d√πng nh·∫≠p"""
    ret, frame = cap.read()
    if ret:
        filename = entry_name.get().strip()
        if not filename:
            messagebox.showwarning("L·ªói", "Vui l√≤ng nh·∫≠p t√™n!")
            return
        
        random_number = generate_unique_id()

        # L∆∞u th√¥ng tin v√†o DataFrame
        new_row = {'M√£': random_number, "T√™n": filename, "So_Ngay_Lam": 0, "So_Ngay_Tre": 0, "CT": 0}
        df.loc[len(df)] = new_row
        
        # L∆∞u l·∫°i v√†o Excel (ki·ªÉm tra n·∫øu file b·ªã m·ªü)
        try:
            df.to_excel(excel_path, index=False)
        except PermissionError:
            messagebox.showerror("L·ªói", "Kh√¥ng th·ªÉ l∆∞u d·ªØ li·ªáu! H√£y ƒë√≥ng file Excel r·ªìi th·ª≠ l·∫°i.")
            return
        
        # L∆∞u ·∫£nh
        image_path = os.path.join(image_folder, f"{random_number}.jpg")
        cv2.imwrite(image_path, frame)
        
        lbl_status.config(text=f"M√£: {random_number} " + "T√™n: "+ str(filename), fg="green")

def on_closing():
    """Gi·∫£i ph√≥ng camera khi ƒë√≥ng c·ª≠a s·ªï"""
    cap.release()
    cv2.destroyAllWindows()
    root.destroy()

# T·∫°o c·ª≠a s·ªï Tkinter
root = tk.Tk()
root.title("ƒêƒÉng K√≠ Ch·∫•m C√¥ng")

# Nh√£n hi·ªÉn th·ªã video
lbl_video = Label(root)
lbl_video.pack()

# √î nh·∫≠p t√™n
entry_name = Entry(root, font=("Arial", 14), width=20)
entry_name.pack(pady=5)

# N√∫t ch·ª•p ·∫£nh
btn_capture = Button(root, text="üì∏ Ch·ª•p ·∫£nh", command=capture_image, font=("Arial", 14))
btn_capture.pack(pady=10)

# Nh√£n tr·∫°ng th√°i
lbl_status = Label(root, text="", fg="green", font=("Arial", 12))
lbl_status.pack()

# B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t video
update_frame()

# B·∫Øt s·ª± ki·ªán ƒë√≥ng c·ª≠a s·ªï
root.protocol("WM_DELETE_WINDOW", on_closing)

# Ch·∫°y giao di·ªán
root.mainloop()
